/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/knob2.gltf --transform
*/

import React, { useRef, useState, forwardRef } from 'react'
import { useGLTF, Text } from '@react-three/drei'
export function Knob2(props) {
  const knob = useRef()
  const [knobVal, setKnobVal] = useState(0)
  const knobSteps = props.knobSteps
  
  const handleClick = (e) => {    
    e.stopPropagation()
    knob.current.rotation.z += 6 / knobSteps
    setKnobVal(knobVal + 1)
    if (knob.current.rotation.z > 6) {
      knob.current.rotation.z = 0
      setKnobVal(0)
    }
  }



  return (
    <group {...props}>
      <KnobValueText knobVal={knobVal} />
      <Knob2Model ref={knob} onClick={(e) => handleClick(e)} />
    </group>
  )
}

const KnobValueText = ({ knobVal }) => {
  return (
    <mesh position={[0, 0.5, 0.5]} rotation={[Math.PI / 2, 0, 0]}>
      <Text color="black" position={[0, 0, -0.25]} rotation={[-90,0,0]} fontSize={0.4} anchorX="center" anchorY='middle'>{knobVal}</Text>
      <meshStandardMaterial attach="material" color="black" />
    </mesh>
  )
}

const Knob2Model = forwardRef(function Knob2Model(props, ref) {
  const { nodes, materials } = useGLTF('/knob2-transformed.glb')
  return (
    <group {...props} ref={ref} dispose={null}>
      <mesh geometry={nodes['Knobe-04_Cylinder002'].geometry} material={materials['Alumninium.001']} position={[0, 0.01, 0.82]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['Knobe-04B_Cylinder001'].geometry} material={materials['Blk_plast.001']} position={[0, 0, 0.27]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Cube.geometry} material={materials['Alumninium.001']} position={[0, 0.24, 0.68]} rotation={[-Math.PI, 0, -Math.PI]} scale={[0.1, 0.3, 0.12]} />
    </group>
  )
})

useGLTF.preload('/knob2-transformed.glb')
